akka.persistence {
	journal {
		cosmosdb {
			# qualified type name of the CosmosDB persistence journal actor
			class = "Akka.Persistence.CosmosDB.Journal.CosmosDBJournal, Akka.Persistence.CosmosDB"

			# CosmosDB endpoint used for database access
			service-uri = ""

			# CosmosDB endpoint Api secret key
			secret-key = ""

			# should corresponding journal table's indexes be initialized automatically
			auto-initialize = off

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# CosmosDB database corresponding with Persistence
			database = "Actors"

			# CosmosDB collection corresponding with persistent journal
			collection = "persistence"

			# metadata collection
			metadata-collection = "persistence"
		}
	}

	snapshot-store {
		cosmosdb {
			# qualified type name of the CosmosDB persistence snapshot actor
			class = "Akka.Persistence.CosmosDB.Snapshot.CosmosDBSnapshotStore, Akka.Persistence.CosmosDB"

			# CosmosDB endpoint used for database access
			service-uri = ""

			# CosmosDB endpoint Api secret key
			secret-key = ""

			# should corresponding snapshot's indexes be initialized automatically
			auto-initialize = off

			# dispatcher used to drive snapshot storage actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# CosmosDB database corresponding with Persistence
			database = "Actors"

			# CosmosDB collection corresponding with persistent snapshot store
			collection = "persistence"
		}
	}
}